{% extends molecule('address-item-form-field-list', '@SprykerShop:CheckoutPage') %}

{% block body %}
    {% for item in data.items %}
        {% set isItemRelatedToBundle = item.vars.data.relatedBundleItemIdentifier %}

        {% if not isItemRelatedToBundle %}
            <div class="grid {{ config.jsName }}__item-shipping-{{ loop.index }}">
                {% set hasShippingAddresses = item.shippingAddress.id_customer_address is defined %}
                {% set itemName = item.vars.data.name | default %}
                {% set itemQuantity = item.vars.data.quantity | default %}
                {% set imageUrl = item.vars.data.images[0].externalUrlSmall ?? '' %}
                {% set deliveryContainerClassName = config.jsName ~ '__delivery-' ~ loop.index %}
                {% set defaultShipmentType = 'delivery' %}
                {% set currentShipmentType = item.shipmentType.key.vars.value | default %}
                {% set isDefaultShipmentType = currentShipmentType == defaultShipmentType %}
                {% set shipmentTypeHiddenClassName = not isDefaultShipmentType ? data.hiddenClassName %}

                {% embed molecule('product-card-item') with {
                    class: 'col col--sm-12 col--lg-6',
                    modifiers: ['expand', 'secondary', 'additional-info'],
                    data: {
                        productItem: item.vars.data,
                        canEditCart: false,
                        additionalContainerClass: '',
                        productOptionsModifiers: ['alternative'],
                    },
                    embed: {
                        item: item,
                        hasShippingAddresses: hasShippingAddresses,
                        deliveryContainerClassName: deliveryContainerClassName,
                        shipmentTypeHiddenClassName: shipmentTypeHiddenClassName,
                        validatorTriggerClassName: data.validatorTriggerClassName,
                        itemShippingClassName: data.itemShippingClassName,
                        addressSelectClassName: data.addressSelectClassName,
                        jsName: config.jsName,
                        index: loop.index,
                    },
                } only %}
                    {% import _self as component %}
                    {% block image %}
                        <div class="{{ component.renderClass(config.name ~ '__image', modifiers) }} col">
                            {% include molecule('product-image') with {
                                modifiers: ['no-side-indent'],
                                data: {
                                    name: data.productItem.name,
                                    image: data.productItem.images[0].externalUrlLarge ?? null,
                                },
                            } only %}
                        </div>
                    {% endblock %}

                    {% block title %}
                        <div class="{{ component.renderClass(config.name ~ '__title', modifiers) }} col">
                            {{ data.productItem.name }}
                        </div>
                    {% endblock %}

                    {% block options %}
                        {% if data.productItem.concreteAttributes is not empty %}
                            <ul>
                                {% for key, item in data.productItem.concreteAttributes %}
                                    <li>{{ ('product.attribute.' ~ key) | trans }}: {{ item }}</li>
                                {% endfor %}
                            </ul>
                        {% endif %}
                    {% endblock %}

                    {% block additionalInfo %}
                        {% if embed.hasShippingAddresses %}
                            <div class="{{ component.renderClass(config.name ~ '__additional-info', modifiers) }}">
                                {% widget 'ShipmentTypeAddressFormWidget' args [embed.item] with {
                                    data: {
                                        deliveryContainerClassName: embed.deliveryContainerClassName,
                                        shipmentTypesClassName: embed.validatorTriggerClassName,
                                        servicePointClassName: embed.itemShippingClassName,
                                    },
                                } only %}{% endwidget %}

                                <div class="{{ embed.deliveryContainerClassName }} {{ embed.shipmentTypeHiddenClassName }}">
                                    {{ form_row(embed.item.shippingAddress.id_customer_address, {
                                        label: 'page.checkout.address.delivery.address_select' | trans,
                                        attr: {
                                            class: embed.addressSelectClassName ~ ' ' ~ embed.deliveryContainerClassName ~ ' ' ~ embed.shipmentTypeHiddenClassName ~ ' ' ~ embed.jsName ~ '__trigger--' ~ embed.index,
                                        },
                                    }) }}
                                </div>
                            </div>
                        {% endif %}
                    {% endblock %}

                    {% block productConfiguration %}
                        {% widget 'ProductConfigurationCartItemDisplayWidget'
                            args [data.productItem]
                            with {
                            data: {
                                wrapperClassName: config.name ~ '__product-configuration-options',
                                hasStatus: false,
                                modifiers: ['alternative'],
                            },
                        } only %}
                        {% endwidget %}
                    {% endblock %}

                    {% block bundles %}{% endblock %}
                {% endembed %}

                <div class="{{ deliveryContainerClassName }} {{ data.validationClassName }} {{ shipmentTypeHiddenClassName }} col col--sm-12">
                    {% include molecule('form') with {
                        class: data.itemShippingClassName ~ ' ' ~ (hasShippingAddresses ? data.hiddenClassName ~ ' ') ~ config.jsName ~ '__item-shipping--' ~ loop.index,
                        modifiers: ['checkout-form'],
                        data: {
                            form: item.shippingAddress,
                            enableStart: false,
                            enableEnd: false,
                            layout: {
                                salutation: 'col col--sm-12 col--lg-3',
                                first_name: 'col col--sm-12 col--lg-4',
                                last_name: 'col col--sm-12 col--lg-5',
                                address1: 'col col--sm-12 col--md-8 col--lg-9',
                                address2: 'col col--sm-12 col--md-4 col--lg-3',
                                zip_code: 'col col--sm-12 col--lg-3',
                                city: 'col col--sm-12 col--lg-5',
                                iso2_code: 'col col--sm-12 col--lg-4',
                            },
                        },
                    } only %}

                    {% include molecule('address-form-toggler', 'CustomerPage') ignore missing with {
                        class: config.jsName ~ '__toggler',
                        attributes: {
                            'trigger-selector': '.' ~ config.jsName ~ '__trigger--' ~ loop.index,
                            'target-selector': '.' ~ config.jsName ~ '__item-shipping--' ~ loop.index,
                            'parent-target-class-name': config.jsName,
                            'is-trigger-has-preselected-option': true,
                        },
                    } only %}
                </div>
            </div>
        {% endif %}
    {% endfor %}
{% endblock %}
